{"version":3,"sources":["images/raw.png","images/gazoot.png","images/nozoma.png","images/chatrade.png","App.js","projects.js","skills.js","landing.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","href","Projects","border","alt","width","src","raw","nozoma","chatrade","gazoot","Skills","Landing","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,0IC0B5BC,MAvBf,WACE,OACE,yBAAKC,UAAU,OACb,8BAEE,yBAAKA,UAAU,SACX,qCACA,sJACA,6BACI,uBAAGC,KAAK,+BAAR,UACA,uBAAGA,KAAK,uDAAR,cAMR,yBAAKD,UAAU,e,gECyBRE,MApCf,WACA,OACI,yBAAKF,UAAU,YACX,yBAAKA,UAAU,SACX,0CACA,uBAAGA,UAAU,OAAOC,KAAK,8DAA6D,yBAAKE,OAAO,IAAIC,IAAI,GAAGC,MAAM,QAAQC,IAAKC,OAChI,yLACA,uBAAGP,UAAU,QAAQC,KAAK,8DAA1B,iBACA,uBAAGD,UAAU,QAAQC,KAAK,+CAA1B,aACA,uBAAGD,UAAU,QAAQC,KAAK,8CAA1B,aAGJ,yBAAKD,UAAU,SACX,sCACA,uBAAGC,KAAK,qCAAqCD,UAAU,QAAO,yBAAKG,OAAO,IAAIC,IAAI,GAAGC,MAAM,QAAQC,IAAKE,OACxG,2MACA,uBAAGR,UAAU,QAAQC,KAAK,sCAA1B,WAGJ,yBAAKD,UAAU,SACX,wCACA,uBAAGC,KAAK,uCAAuCD,UAAU,QAAO,yBAAKG,OAAO,IAAIC,IAAI,GAAGC,MAAM,QAAQC,IAAKG,OAC1G,+MACA,uBAAGT,UAAU,QAAQC,KAAK,wCAA1B,WAGJ,yBAAKD,UAAU,SACX,sCACA,uBAAGC,KAAK,qCAAqCD,UAAU,QAAO,yBAAKG,OAAO,IAAIC,IAAI,GAAGC,MAAM,QAAQC,IAAKI,OACxG,sQACA,uBAAGV,UAAU,QAAQC,KAAK,sCAA1B,aCbGU,MAtBf,WACI,OACA,yBAAKX,UAAU,UACP,sCACA,6BACI,mCACA,4CACA,mCACA,uCACA,oCACA,yCACA,yCACA,oCACA,sCACA,uCACA,wCACA,wCCDDY,MAff,WACE,OACE,yBAAKZ,UAAU,WACX,yBAAKA,UAAU,SACX,4CACA,6CAGJ,yBAAKA,UAAU,SACP,iDCAIa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGFC,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5a7a5bb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/raw.f3195b38.png\";","module.exports = __webpack_public_path__ + \"static/media/gazoot.6445dc77.png\";","module.exports = __webpack_public_path__ + \"static/media/nozoma.f43a9b81.png\";","module.exports = __webpack_public_path__ + \"static/media/chatrade.c230d2a4.png\";","import React from 'react';\nimport './css/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <body>\n\n        <div className=\"about\">\n            <h1>About</h1>\n            <p>I'm a brisbane based Web Developer focused on continual growth and development in myself, there's always more to learn!</p>\n            <div>\n                <a href='https://github.com/Ashamaly'>GitHub</a>\n                <a href='https://www.linkedin.com/in/ashley-beard-253900191/'>LinkedIn</a>\n            </div>\n            \n        </div>\n\n        \n        <div className=\"contact\"></div>\n\n    </body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport './css/styles.css';\r\n\r\nimport raw from './images/raw.png'\r\nimport gazoot from './images/gazoot.png'\r\nimport nozoma from './images/nozoma.png'\r\nimport chatrade from './images/chatrade.png'\r\n\r\nfunction Projects() {\r\nreturn (\r\n    <div className='projects'>\r\n        <div className='pitem'>\r\n            <h1>Raw Barber</h1>\r\n            <a className='imga' href='https://github.com/DanielLMA/MERN_Assignment_Documentation'><img border=\"0\" alt=\"\" width=\"250px\" src={raw} /></a>\r\n            <p>The purpose of this group project was to create an website for our client Raw Barber to help increase online presence to their requests and specification.</p>\r\n            <a className='links' href='https://github.com/DanielLMA/MERN_Assignment_Documentation'>Documentation</a>\r\n            <a className='links' href='https://github.com/DanielLMA/MERN_front_end'>Front end</a>\r\n            <a className='links' href='https://github.com/DanielLMA/MERN_back_end'>Back end</a>\r\n        </div>\r\n\r\n        <div className='pitem'>\r\n            <h1>Nozoma</h1>\r\n            <a href='https://github.com/Ashamaly/round2' className='imga'><img border=\"0\" alt=\"\" width=\"250px\" src={nozoma} /></a>\r\n            <p>The purpose of this course is to create a two-sided marketplace that connects users to each other, allowing them to buy and sell books between them with rails and postgres.</p>\r\n            <a className='links' href='https://github.com/Ashamaly/round2'>GitHub</a>\r\n        </div>\r\n\r\n        <div className='pitem'>\r\n            <h1>ChaTrade</h1>\r\n            <a href='https://github.com/Ashamaly/chat-app' className='imga'><img border=\"0\" alt=\"\" width=\"250px\" src={chatrade} /></a>\r\n            <p>The purpose of ChaTrade is to connect registered users to one another via chat rooms so they can practice speaking different languages with each other using rails and postgres.</p>\r\n            <a className='links' href='https://github.com/Ashamaly/chat-app'>GitHub</a>\r\n        </div>\r\n\r\n        <div className='pitem'>\r\n            <h1>Gazoot</h1>\r\n            <a href='https://github.com/Ashamaly/Gazoot' className='imga'><img border=\"0\" alt=\"\" width=\"250px\" src={gazoot} /></a>\r\n            <p>Gazoot is a quiz/action hybrid created using Ruby where answering questions correctly (and quickly!) allow you to attack and take down a monster. This project was to review and build on skills learned in my first 2 weeks of coding.</p>\r\n            <a className='links' href='https://github.com/Ashamaly/Gazoot'>GitHub</a>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './css/styles.css';\r\n\r\nfunction Skills() {\r\n    return(\r\n    <div className=\"skills\">\r\n            <h1>Skills</h1>\r\n            <div>\r\n                <p>Ruby</p>\r\n                <p>Ruby on Rails</p>\r\n                <p>HTML</p>\r\n                <p>CSS/SCSS</p>\r\n                <p>React</p>\r\n                <p>PostgreSQL</p>\r\n                <p>Javascript</p>\r\n                <p>Bulma</p>\r\n                <p>MongoDB</p>\r\n                <p>Mongoose</p>\r\n                <p>Bootstrap</p>\r\n                <p>Trello</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport './css/styles.css';\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className=\"landing\">\r\n        <div className=\"title\">\r\n            <h1>Ashley Beard</h1>\r\n            <p>Web Developer</p>\r\n        </div>\r\n\r\n        <div className=\"arrow\">\r\n                <p>Scroll for more</p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n// import Header from './header';\n// import Footer from './footer';\nimport Projects from './projects';\nimport Skills from './skills';\nimport Landing from './landing'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Header /> */}\n    <Landing />\n    <App />\n    <Projects />\n    <Skills />\n    {/* <Footer /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}